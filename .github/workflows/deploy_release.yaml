#
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements. See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
name: Deploy Release

# This workflow is intended to be run after successfully validation of the release
# staged by stage_release.  It will release (or drop) the staging repository.
#
# It requires the following:
# variables:
# KROXYLICIOUS_SONATYPE_TOKEN_USERNAME - Sonatype Access User Token Username
# secrets:
# KROXYLICIOUS_SONATYPE_TOKEN_PASSWORD - Sonatype Access User Token Password
# KROXYLICIOUS_RELEASE_TOKEN             - GitHub PAT wih content/createPullRequest permission for Kroxylicious repo.
#

on:
  workflow_call:
    inputs:
      release-pr-issue-number:
        description: 'PR number that is performing the release'
        type: number
        required: true
      next-state:
        description: 'Desired next state for this release'
        required: true
        type: string
    secrets:
      KROXYLICIOUS_SONATYPE_TOKEN_PASSWORD:
        required: true
      KROXYLICIOUS_RELEASE_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.KROXYLICIOUS_RELEASE_TOKEN }}
          fetch-tags: true
          fetch-depth: 0

      - name: 'Get the branch associated with the PR'
        env:
          GH_TOKEN: ${{ secrets.KROXYLICIOUS_RELEASE_TOKEN }}
        run: |
            echo "PR_HEAD=$(gh pr view ${{ inputs.release-pr-issue-number}} --json headRefName | jq -r .headRefName)" >> $GITHUB_ENV

      - name: 'Get release tag from the branch of PR'
        env:
          GH_TOKEN: ${{ secrets.KROXYLICIOUS_RELEASE_TOKEN }}
        run: |
          echo "RELEASE_VERSION=$(git name-rev --no-undefined --tags --name-only  origin/${PR_HEAD}^ | sed -e 's/^v//')" >> $GITHUB_ENV

      - name: 'Cache Maven packages'
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Set up Java'
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          server-id: ossrh
          server-username: SONATYPE_TOKEN_USERNAME # env variable for Sonatype username
          server-password: SONATYPE_TOKEN_PASSWORD # env variable for Sonatype password
          overwrite-settings: true

      - name: 'Transition snapshot repository to desired state'
        env:
          SONATYPE_TOKEN_USERNAME: ${{ vars.KROXYLICIOUS_SONATYPE_TOKEN_USERNAME }}
          SONATYPE_TOKEN_PASSWORD: ${{ secrets.KROXYLICIOUS_SONATYPE_TOKEN_PASSWORD }}
        run: ./scripts/transition-staging-repository-state.sh -s ${{ inputs.next-state }}

      - name: 'Transition release notes to desired state'
        env:
          GH_TOKEN: ${{ secrets.KROXYLICIOUS_RELEASE_TOKEN }} # For the gh cmd line tool used by transition-github-release-note-state.sh
        run: ./scripts/transition-github-release-note-state.sh -s  ${{ inputs.next-state }} -v ${{ env.RELEASE_VERSION }}

      - name: 'Merge PR'
        if: inputs.next-state == 'release'
        env:
          GH_TOKEN: ${{ secrets.KROXYLICIOUS_RELEASE_TOKEN }}
        run: |
          # TODO: verify that main hasn't moved
          echo gh pr merge --delete-branch --rebase ${{ inputs.release-pr-issue-number }}

      - name: 'Drop PR'
        if: inputs.next-state == 'drop'
        env:
          GH_TOKEN: ${{ secrets.KROXYLICIOUS_RELEASE_TOKEN }}
        run: |
          gh pr close --comment "Release dropped" --delete-branch ${{ inputs.release-pr-issue-number }} 

# Merge the PR or Close the PR
